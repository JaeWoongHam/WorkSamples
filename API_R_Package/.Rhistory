df$education == "$35,000 to $49,999" ~3,
df$education == "$50,000 to $74,999" ~4,
df$education = "$75,000 to $99,999" ~5,
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
income_bands <- data.frame(id = 1:length(options), income = options)
df %>% mutate(income_numeric = case_when(df$education == "Less than $25,000" ~1,
df$education == "$25,000 to $34,999" ~2,
df$education == "$35,000 to $49,999" ~3,
df$education == "$50,000 to $74,999" ~4,
df$education == "$75,000 to $99,999" ~5,
df$education == "$100,000 to $149,999" ~6,
df$education == "$150,000 or more" ~7))
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
#income_bands <- data.frame(id = 1:length(options), income = options)
df %>% mutate(income_numeric = case_when(df$education == "Less than $25,000" ~ 1,
df$education == "$25,000 to $34,999" ~ 2,
df$education == "$35,000 to $49,999" ~ 3,
df$education == "$50,000 to $74,999" ~ 4,
df$education == "$75,000 to $99,999" ~ 5,
df$education == "$100,000 to $149,999" ~ 6,
df$education == "$150,000 or more" ~ 7))
df$education
df$education[1]
df$education[2]
as.factor(df$education)
x <- as.factor(df$education)
x
df2 <-df
df2 <-df %>%
select(age,income,ethnicity,education,party,guessed_correctly)
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
df2 <-df %>%
select(age,income,ethnicity,education,party,guessed_correctly)
must_convert<-sapply(df2,is.factor)       # logical vector telling if a variable needs to be displayed as numeric
df_modified<-sapply(df2[,must_convert],unclass)    # data.frame of all categorical variables now displayed as numeric
out<-cbind(df[,!must_convert],df2)
View(out)
out<-cbind(df2[,!must_convert],df)
View(df2)
return(df_modified)}
return(df_modified)}
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
df2 <-df %>%
select(age,income,ethnicity,education,party,guessed_correctly)
convert <- function(x){
must_convert<-sapply(x,is.factor)
df_modified<-sapply(x[,must_convert],unclass)
return(df_modified)}
df$income2 <- convert(df$income)
df$income2 <- convert(df$income)
return(df_modified)}
return(df_modified)}
convert <- function(x){
must_convert<-s(x,is.factor)
df_modified<-sapply(x[,must_convert],unclass)
return(df_modified)}
convert(df$income)
convert <- function(x){
must_convert<-sapply(x,is.factor)
df_modified<-sapply(x[,must_convert],unclass)
return(df_modified)}
convert(df$income)
return(df_modified)}
convert <- function(x){
must_convert<-sapply(x,is.factor)
df_modified<-sapply(x[must_convert],unclass)
return(df_modified)
}
convert(df$income)
df$income2 <- convert(df$income)
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
#income_bands <- data.frame(id = 1:length(options), income = options)
df %>% mutate(income_numeric = case_when(df$education == "Less than $25,000" ~ 1,
df$education == "$25,000 to $34,999" ~ 2,
df$education == "$35,000 to $49,999" ~ 3,
df$education == "$50,000 to $74,999" ~ 4,
df$education == "$75,000 to $99,999" ~ 5,
df$education == "$100,000 to $149,999" ~ 6,
df$education == "$150,000 or more" ~ 7))
df$education[1]
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
#income_bands <- data.frame(id = 1:length(options), income = options)
df %>% mutate(income_numeric = case_when(df$income == "Less than $25,000" ~ 1,
df$income == "$25,000 to $34,999" ~ 2,
df$income == "$35,000 to $49,999" ~ 3,
df$income == "$50,000 to $74,999" ~ 4,
df$income == "$75,000 to $99,999" ~ 5,
df$income == "$100,000 to $149,999" ~ 6,
df$income == "$150,000 or more" ~ 7))
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
df2 <-df %>%
select(age,income,ethnicity,education,party,guessed_correctly)
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
#income_bands <- data.frame(id = 1:length(options), income = options)
df %>% mutate(income_numeric = case_when(df$income == "Less than $25,000" ~ 1,
df$income == "$25,000 to $34,999" ~ 2,
df$income == "$35,000 to $49,999" ~ 3,
df$income == "$50,000 to $74,999" ~ 4,
df$income == "$75,000 to $99,999" ~ 5,
df$income == "$100,000 to $149,999" ~ 6,
df$income == "$150,000 or more" ~ 7))
#options <- c("Less than high school", "High school graduate (includes equivalency)", "Some college, no degree", "Associate's degree", "Bachelor's degree", "Ph.D.", "Graduate or professional degree")
#education_bands <- data.frame(id = 1:length(options), education = options)
df %>% mutate(education_numeric = case_when(df$education == "Less than high school" ~ 1,
df$education == "High school graduate (includes equivalency)" ~ 2,
df$education == "Some college, no degree" ~ 3,
df$education == "Associate's degree" ~ 4,
df$education == "Bachelor's degree" ~ 5,
df$education == "Graduate or professional degree" ~ 6,
df$education == "Ph.D." ~ 7))
#options <- c("White", "Black or African American", "Other race")
#ethnicities <- data.frame(id = 1:length(options), ethnicity = options)
df %>% mutate(race_numeric = case_when(df$ethnicity == "White" ~ 1,
df$ethnicity == "Black or African American" ~ 2,
df$ethnicity == "Other race" ~ 3))
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
df2 <-df %>%
select(age,income,ethnicity,education,party,guessed_correctly)
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
#income_bands <- data.frame(id = 1:length(options), income = options)
df %>% mutate(income_numeric = case_when(df$income == "Less than $25,000" ~ 1,
df$income == "$25,000 to $34,999" ~ 2,
df$income == "$35,000 to $49,999" ~ 3,
df$income == "$50,000 to $74,999" ~ 4,
df$income == "$75,000 to $99,999" ~ 5,
df$income == "$100,000 to $149,999" ~ 6,
df$income == "$150,000 or more" ~ 7))
#options <- c("Less than high school", "High school graduate (includes equivalency)", "Some college, no degree", "Associate's degree", "Bachelor's degree", "Ph.D.", "Graduate or professional degree")
#education_bands <- data.frame(id = 1:length(options), education = options)
df %>% mutate(education_numeric = case_when(df$education == "Less than high school" ~ 1,
df$education == "High school graduate (includes equivalency)" ~ 2,
df$education == "Some college, no degree" ~ 3,
df$education == "Associate's degree" ~ 4,
df$education == "Bachelor's degree" ~ 5,
df$education == "Graduate or professional degree" ~ 6,
df$education == "Ph.D." ~ 7))
stargazer(df)
suppressMessages(library(stargazer))
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(sp, quietly = TRUE))
suppressMessages(library(xtable))                        # Pretty printing dataframes
suppressMessages(library(plyr, warn.conflicts = FALSE))  # Manipulating dataframes
suppressMessages(library(dplyr, warn.conflicts = FALSE))
suppressMessages(library(stringr))                       # Manipulating strings
suppressMessages(library(reshape2))                      # Reshape columns into rows
suppressMessages(library(stargazer))
library("psych")
library(magrittr)
library(tidyverse)
raw_data <- headlines <- read.csv("C://Users/jaeha/Downloads/DataScience/coursera/fakenews/output/accuracy_data.csv")
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(sp, quietly = TRUE))
suppressMessages(library(xtable))                        # Pretty printing dataframes
suppressMessages(library(plyr, warn.conflicts = FALSE))  # Manipulating dataframes
suppressMessages(library(dplyr, warn.conflicts = FALSE))
suppressMessages(library(stringr))                       # Manipulating strings
suppressMessages(library(reshape2))                      # Reshape columns into rows
suppressMessages(library(stargazer))
library("psych")
library(magrittr)
library(tidyverse)
raw_data <- headlines <- read.csv("C://Users/jaeha/Downloads/DataScience/coursera/fakenews/output/accuracy_data.csv")
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
df2 <-df %>%
select(age,income,ethnicity,education,party,guessed_correctly)
convert <- function(x){
must_convert<-sapply(x,is.factor)
df_modified<-sapply(x[must_convert],unclass)
return(df_modified)
}
df$income2 <- convert(df$income)
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
#income_bands <- data.frame(id = 1:length(options), income = options)
df %>% mutate(income_numeric = case_when(df$income == "Less than $25,000" ~ 1,
df$income == "$25,000 to $34,999" ~ 2,
df$income == "$35,000 to $49,999" ~ 3,
df$income == "$50,000 to $74,999" ~ 4,
df$income == "$75,000 to $99,999" ~ 5,
df$income == "$100,000 to $149,999" ~ 6,
df$income == "$150,000 or more" ~ 7))
#options <- c("Less than high school", "High school graduate (includes equivalency)", "Some college, no degree", "Associate's degree", "Bachelor's degree", "Ph.D.", "Graduate or professional degree")
#education_bands <- data.frame(id = 1:length(options), education = options)
df %>% mutate(education_numeric = case_when(df$education == "Less than high school" ~ 1,
df$education == "High school graduate (includes equivalency)" ~ 2,
df$education == "Some college, no degree" ~ 3,
df$education == "Associate's degree" ~ 4,
df$education == "Bachelor's degree" ~ 5,
df$education == "Graduate or professional degree" ~ 6,
df$education == "Ph.D." ~ 7))
#options <- c("White", "Black or African American", "Other race")
#ethnicities <- data.frame(id = 1:length(options), ethnicity = options)
df %>% mutate(race_numeric = case_when(df$ethnicity == "White" ~ 1,
df$ethnicity == "Black or African American" ~ 2,
df$ethnicity == "Other race" ~ 3))
#options <- c("Democrat", "Republican", "Independent", "Other")
#parties <- data.frame(id = 1:length(options), party = options)
df %>% mutate(party_numeric = case_when(df$party == "Democrat" ~ 1,
df$party == "Republican" ~ 2,
df$party == "Independent" ~ 3,
f$party == "Other" ~ 4))
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(sp, quietly = TRUE))
suppressMessages(library(xtable))                        # Pretty printing dataframes
suppressMessages(library(plyr, warn.conflicts = FALSE))  # Manipulating dataframes
suppressMessages(library(dplyr, warn.conflicts = FALSE))
suppressMessages(library(stringr))                       # Manipulating strings
suppressMessages(library(reshape2))                      # Reshape columns into rows
suppressMessages(library(stargazer))
library("psych")
library(magrittr)
library(tidyverse)
raw_data <- headlines <- read.csv("C://Users/jaeha/Downloads/DataScience/coursera/fakenews/output/accuracy_data.csv")
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
df2 <-df %>%
select(age,income,ethnicity,education,party,guessed_correctly)
convert <- function(x){
must_convert<-sapply(x,is.factor)
df_modified<-sapply(x[must_convert],unclass)
return(df_modified)
}
df$income2 <- convert(df$income)
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
#income_bands <- data.frame(id = 1:length(options), income = options)
df %>% mutate(income_numeric = case_when(df$income == "Less than $25,000" ~ 1,
df$income == "$25,000 to $34,999" ~ 2,
df$income == "$35,000 to $49,999" ~ 3,
df$income == "$50,000 to $74,999" ~ 4,
df$income == "$75,000 to $99,999" ~ 5,
df$income == "$100,000 to $149,999" ~ 6,
df$income == "$150,000 or more" ~ 7))
#options <- c("Less than high school", "High school graduate (includes equivalency)", "Some college, no degree", "Associate's degree", "Bachelor's degree", "Ph.D.", "Graduate or professional degree")
#education_bands <- data.frame(id = 1:length(options), education = options)
df %>% mutate(education_numeric = case_when(df$education == "Less than high school" ~ 1,
df$education == "High school graduate (includes equivalency)" ~ 2,
df$education == "Some college, no degree" ~ 3,
df$education == "Associate's degree" ~ 4,
df$education == "Bachelor's degree" ~ 5,
df$education == "Graduate or professional degree" ~ 6,
df$education == "Ph.D." ~ 7))
#options <- c("White", "Black or African American", "Other race")
#ethnicities <- data.frame(id = 1:length(options), ethnicity = options)
df %>% mutate(race_numeric = case_when(df$ethnicity == "White" ~ 1,
df$ethnicity == "Black or African American" ~ 2,
df$ethnicity == "Other race" ~ 3))
#options <- c("Democrat", "Republican", "Independent", "Other")
#parties <- data.frame(id = 1:length(options), party = options)
df %>% mutate(party_numeric = case_when(df$party == "Democrat" ~ 1,
df$party == "Republican" ~ 2,
df$party == "Independent" ~ 3,
df$party == "Other" ~ 4))
stargazer(df, type = 'text')
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
#income_bands <- data.frame(id = 1:length(options), income = options)
df %>% mutate(income_numeric = case_when(df$income == "Less than $25,000" ~ 1,
df$income == "$25,000 to $34,999" ~ 2,
df$income == "$35,000 to $49,999" ~ 3,
df$income == "$50,000 to $74,999" ~ 4,
df$income == "$75,000 to $99,999" ~ 5,
df$income == "$100,000 to $149,999" ~ 6,
df$income == "$150,000 or more" ~ 7))
#options <- c("Less than high school", "High school graduate (includes equivalency)", "Some college, no degree", "Associate's degree", "Bachelor's degree", "Ph.D.", "Graduate or professional degree")
#education_bands <- data.frame(id = 1:length(options), education = options)
df %>% mutate(education_numeric = case_when(df$education == "Less than high school" ~ 1,
df$education == "High school graduate (includes equivalency)" ~ 2,
df$education == "Some college, no degree" ~ 3,
df$education == "Associate's degree" ~ 4,
df$education == "Bachelor's degree" ~ 5,
df$education == "Graduate or professional degree" ~ 6,
df$education == "Ph.D." ~ 7))
#options <- c("White", "Black or African American", "Other race")
#ethnicities <- data.frame(id = 1:length(options), ethnicity = options)
df %>% mutate(race_numeric = case_when(df$ethnicity == "White" ~ 1,
df$ethnicity == "Black or African American" ~ 2,
df$ethnicity == "Other race" ~ 3))
#options <- c("White", "Black or African American", "Other race")
#ethnicities <- data.frame(id = 1:length(options), ethnicity = options)
df %>% mutate(race_numeric = case_when(df$ethnicity == "White" ~ 1,
df$ethnicity == "Black or African American" ~ 2,
df$ethnicity == "Other race" ~ 3))
View(df)
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(sp, quietly = TRUE))
suppressMessages(library(xtable))                        # Pretty printing dataframes
suppressMessages(library(plyr, warn.conflicts = FALSE))  # Manipulating dataframes
suppressMessages(library(dplyr, warn.conflicts = FALSE))
suppressMessages(library(stringr))                       # Manipulating strings
suppressMessages(library(reshape2))                      # Reshape columns into rows
suppressMessages(library(stargazer))
library("psych")
library(magrittr)
library(tidyverse)
raw_data <- headlines <- read.csv("C://Users/jaeha/Downloads/DataScience/coursera/fakenews/output/accuracy_data.csv")
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
df2 <-df %>%
select(age,income,ethnicity,education,party,guessed_correctly)
#options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
#income_bands <- data.frame(id = 1:length(options), income = options)
df <- df %>% mutate(income_numeric = case_when(df$income == "Less than $25,000" ~ 1,
df$income == "$25,000 to $34,999" ~ 2,
df$income == "$35,000 to $49,999" ~ 3,
df$income == "$50,000 to $74,999" ~ 4,
df$income == "$75,000 to $99,999" ~ 5,
df$income == "$100,000 to $149,999" ~ 6,
df$income == "$150,000 or more" ~ 7))
#options <- c("Less than high school", "High school graduate (includes equivalency)", "Some college, no degree", "Associate's degree", "Bachelor's degree", "Ph.D.", "Graduate or professional degree")
#education_bands <- data.frame(id = 1:length(options), education = options)
df <- df %>% mutate(education_numeric = case_when(df$education == "Less than high school" ~ 1,
df$education == "High school graduate (includes equivalency)" ~ 2,
df$education == "Some college, no degree" ~ 3,
df$education == "Associate's degree" ~ 4,
df$education == "Bachelor's degree" ~ 5,
df$education == "Graduate or professional degree" ~ 6,
df$education == "Ph.D." ~ 7))
#options <- c("White", "Black or African American", "Other race")
#ethnicities <- data.frame(id = 1:length(options), ethnicity = options)
df <- df %>% mutate(race_numeric = case_when(df$ethnicity == "White" ~ 1,
df$ethnicity == "Black or African American" ~ 2,
df$ethnicity == "Other race" ~ 3))
#options <- c("Democrat", "Republican", "Independent", "Other")
#parties <- data.frame(id = 1:length(options), party = options)
df <- df %>% mutate(party_numeric = case_when(df$party == "Democrat" ~ 1,
df$party == "Republican" ~ 2,
df$party == "Independent" ~ 3,
df$party == "Other" ~ 4))
stargazer(df, type = 'text')
View(df)
summaryBy(df~party, data=df, FUN=c(mean,sd))
summarise(df~party, data=df, FUN=c(mean,sd))
summary(df~party, data=df, FUN=c(mean,sd))
df <- df %>% mutate(outcome = case_when(df$guessed_correctly == "yes" ~ 1,
df$guessed_correctly == "no" ~ 0))
lm1 <- lm(outcome ~ income_numeric + education_numeric + age, data = df)
summary(lm_q3)
summary(lm1)
lm1 <- lm(outcome ~ income_numeric + education_numeric + age + party, data = df)
summary(lm1)
df <- df %>% mutate(trust = case_when(df$accuracy == "not at all accurate" ~ 0,
df$accuracy == "not very accurate" ~ 1,
df$accuracy == "somewhat accurate" ~ 2,
df$accuracy == "very accurate" ~ 3))
summary(lm1)
lm1 <- lm(trust ~ income_numeric + education_numeric + age + party, data = df)
summary(lm1)
lm1 <- lm(outcome ~ income_numeric + education_numeric + age + party, data = df)
summary(lm1)
df <- df %>% mutate(trustv2 = case_when(df$accuracy == "not at all accurate" ~ 0,
df$accuracy == "not very accurate" ~ 0,
df$accuracy == "somewhat accurate" ~ 1,
df$accuracy == "very accurate" ~ 1))
lm1 <- lm(trustv2 ~ income_numeric + education_numeric + age + party, data = df)
summary(lm1)
summary(lm1)
lm1 <- lm(outcome ~ income_numeric + education_numeric + age + party, data = df)
summary(lm1)
lm1 <- lm(trustv2 ~ income_numeric + education_numeric + age, data = df)
summary(lm1)
lm1 <- lm(trustv2 ~ income_numeric + education_numeric + age + party, data = df)
lm1 <- lm(trustv2 ~ income_numeric + education_numeric + age + party, data = df)
summary(lm1)
lm2 <- lm(trustv2 ~ income_numeric + education_numeric + age + party, data = df)
summary(lm2)
lm3 <- lm(trustv2 ~ income_numeric + education_numeric + age + ethnicities, data = df)
summary(lm3)
lm3 <- lm(trustv2 ~ income_numeric + education_numeric + age + ethnicity, data = df)
summary(lm3)
truehist(sub$resids, col = "skyblue",yaxt="n",cex.axis=0.8,xlab="residuals")
install.packages("mass")
install.packages("MASS")
library(MASS)
sub$resids <- lm2$residuals
truehist(sub$resids, col = "skyblue",yaxt="n",cex.axis=0.8,xlab="residuals")
sub$resids
sub$resids
sub$resids <- lm2$residuals
lm2$residuals
truehist(lm2$residuals, col = "skyblue",yaxt="n",cex.axis=0.8,xlab="residuals")
truehist(lm2$residuals, col = "skyblue",yaxt="n",cex.axis=0.2,xlab="residuals")
truehist(lm2$residuals, col = "skyblue",yaxt="n",cex.axis=1,xlab="residuals")
curve(dnorm(x,mean=mean(lm2$residuals),sd=sd(lm2$residuals))+
lwd=2, col="orangered",add=T)
curve(dnorm(x,mean=mean(lm2$residuals),sd=sd(lm2$residuals))+
lwd=2, col="orangered",add=T)
curve(dnorm(x,mean=mean(lm2$residuals),sd=sd(lm2$residuals))+lwd=2, col="orangered",add=T)
truehist(lm2$residuals, col = "skyblue",yaxt="n",cex.axis=1,xlab="residuals")
truehist(lm2$residuals, col = "blue",yaxt="n",cex.axis=1,xlab="residuals")
truehist(lm2$residuals, col = "black",yaxt="n",cex.axis=1,xlab="residuals")
truehist(lm2$residuals, col = "steelblue",yaxt="n",cex.axis=1,xlab="residuals")
lm2$yhat <- lm2$fitted
range(lm2$fitted)
library(lmtest)
bptest(lm2)
logit2 <- glm(trustv2 ~ income_numeric + education_numeric + age + party, data = df, family = binomial)
summary(logit2)
exp(coef(logit2))
stargazer(exp(coef(logit2)), type = 'text')
predProb <- function(model, predData, ci = TRUE, level = 0.95){
link <- model$family$link
bad_link <- !(link %in% c("logit", "probit"))
if (bad_link) {
stop("Link function should be 'logit' or 'probit'")
}
fun <- ifelse(link == "probit", "pnorm", "plogis")
if (ci == FALSE){
preds <- predict(model, type = "response", newdata = predData)
preds <- cbind(predData, PredictedProb = preds)
return(preds)
}
else {
temp <- predict(model, type = "link", se = TRUE, newdata = predData)
fit <- temp$fit
se <- temp$se.fit
p <- (1 - level)/2
p <- c(p, 1-p)
PredictedProb <- do.call(fun, args = list(q = fit))
ci1 <- do.call(fun, args = list(q = fit + qnorm(p[1])*se))
ci2 <- do.call(fun, args = list(q = fit + qnorm(p[2])*se))
CI <- cbind(ci1, ci2)
colnames(CI) <- paste0(paste(100*p), "%")
preds <- cbind(predData, PredictedProb, CI)
return(preds)
}
}
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = 0:3))
predProb(logit2,prepData=prep.dat)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = 0:3))
predProb(logit2,prepData=prep.dat,level=0.99)
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party ))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age)))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party_numeric = 1:3))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = party))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = party[1:3]))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = as.factor(party)))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = c("Democrat,Republican,Other,Independet")))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = c("partyIndependent")))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = "Democrat"))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = c("Democrat","Republican")))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=median(income_numeric),education_numeric=median(education_numeric),age=median(age),party = c("Democrat","Republican","Independent","Other")))
predProb(logit2,prep.dat,level=0.99)
prep.dat <- with(df,data.frame(income_numeric=mean(income_numeric),education_numeric=mean(education_numeric),age=mean(age),party = c("Democrat","Republican","Independent","Other")))
predProb(logit2,prep.dat,level=0.99)
probit <- glm(trustv2 ~ income_numeric + education_numeric + age + party, data = df, family = binomial(link=probit))
summary(probit)
options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
income_bands <- data.frame(id = 1:length(options), income = options)
render_table(income_bands)
options <- c("Less than high school", "High school graduate (includes equivalency)", "Some college, no degree", "Associate's degree", "Bachelor's degree", "Ph.D.", "Graduate or professional degree")
education_bands <- data.frame(id = 1:length(options), education = options)
education_bands
options <- c("Less than $25,000", "$25,000 to $34,999", "$35,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")
income_bands <- data.frame(id = 1:length(options), income = options)
income_bands
options <- c("Less than high school", "High school graduate (includes equivalency)", "Some college, no degree", "Associate's degree", "Bachelor's degree", "Graduate or professional degree", "Ph.D.")
education_bands <- data.frame(id = 1:length(options), education = options)
education_bands
options <- c("Democrat", "Republican", "Independent", "Other")
parties <- data.frame(id = 1:length(options), party = options)
parties
options <- c("very accurate", "somewhat accurate", "not very accurate", "not at all accurate")
accuracies <- data.frame(id = 1:length(options), accuracy = options)
accuracies
options <- c("Don't Trust", "Trust")
accuracies <- data.frame(id = 1:length(options), trust = options)
accuracies
stargazer(df$party, type = 'text')
stargazer(as.factor(df$party), type = 'text')
summary(df)
stargazer(summary(df), type = 'text')
table(summary(df))
summary(df)
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(sp, quietly = TRUE))
suppressMessages(library(xtable))                        # Pretty printing dataframes
suppressMessages(library(plyr, warn.conflicts = FALSE))  # Manipulating dataframes
suppressMessages(library(dplyr, warn.conflicts = FALSE))
suppressMessages(library(stringr))                       # Manipulating strings
suppressMessages(library(reshape2))                      # Reshape columns into rows
suppressMessages(library(stargazer))
library("psych")
library(magrittr)
library(tidyverse)
raw_data <- headlines <- read.csv("C://Users/jaeha/Downloads/DataScience/coursera/fakenews/output/accuracy_data.csv")
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
raw_data <- headlines <- read.csv("C://Users/jaeha/Downloads/DataScience/coursera/fakenews/output/accuracy_data.csv")
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
raw_data <- headlines <- read.csv("C://Users/jaeha/Downloads/DataScience/coursera/fakenews/output/accuracy_data.csv")
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
df<- raw_data %>%
select(ID,Weightvar,age,income,ethnicity,education,party,headline_id,accuracy,headline_status,guessed_correctly)
View(raw_data)
sd(df$trustv2)
truehist(lm2$residuals, col = "steelblue",yaxt="n",cex.axis=1,xlab="residuals")
